{"dialogue_id": "4694c1d9-594a-4c19-a181-d4e89520176f", "turn_part_id": 4, "utterance": "Actually I meant Walking", "last_user_utterance": "Do I have any running events this week?", "last_agent_utterance": "Yes, I found one event matching \"Walking\" this week. It's from 3:00 to 3:30 PM.", "last_plan": "(QueryEventResponseIsNonEmpty (FindEventWrapperWithDefaults (& (Event.duringDateRangeConstraint_? (ThisWeek)) (Event.subject_? (?~= \"running\")))))", "plan": "(Execute (ReviseConstraint (DefaultRootLocation) (^(Event) ConstraintTypeIntension) (Event.subject_? (?~= \"Walking\"))))", "oracle_rewritten_utterance": "Do I have any Walking events this week?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic Event) ReviseConstraint :rootLocation ^(CalflowIntension Dynamic) (DefaultRootLocation) :oldLocation ^(Constraint (CalflowIntension (Constraint Event))) (^(Event) ConstraintTypeIntension) :new ^(Constraint Event) (Event.subject_? :obj ^(Constraint String) (?~= :reference ^String \"Walking\"))))"}
{"dialogue_id": "5d825d71-81a7-414e-bd94-724c79dc474b", "turn_part_id": 1, "utterance": "How about on Thursday?", "last_user_utterance": "Is there a sales meeting with Jane on Tuesday?", "last_agent_utterance": "No, I didn't find any events matching \"sales meeting\" with Jane tomorrow.", "last_plan": "(QueryEventResponseIsNonEmpty (FindEventWrapperWithDefaults (& (Event.attendees_? (WithAttendeeNamed \"Jane\")) (Event.subject_? (?~= \"sales meeting\")))))", "plan": "(Execute (ReviseConstraint (DefaultRootLocation) (^(Event) ConstraintTypeIntension) (Event.onDate_? (ClosestDayOfWeek (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (Thursday)))))", "oracle_rewritten_utterance": "Is there a sales meeting with Jane on Thursday?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic Event) ReviseConstraint :rootLocation ^(CalflowIntension Dynamic) (DefaultRootLocation) :oldLocation ^(Constraint (CalflowIntension (Constraint Event))) (^(Event) ConstraintTypeIntension) :new ^(Constraint Event) (Event.onDate_? :date ^Date (ClosestDayOfWeek :date ^Date (^(Date) Execute :intension ^(CalflowIntension Date) (^(Date) refer :constraint ^(Constraint (CalflowIntension Date)) (^(Date) extensionConstraint :constraint ^(Constraint Date) (^(Date) EmptyStructConstraint)))) :dow ^DayOfWeek (Thursday)))))"}
{"dialogue_id": "8fbde35c-e7f5-439c-a14f-1a066167c9b4", "turn_part_id": 1, "utterance": "what about next week tho", "last_user_utterance": "Do I have any event scheduled with Dale Walker this week?", "last_agent_utterance": "Yes, I found one matching event on your calendar. It's \"Merger\" on November 7th from 3:00 to 3:30 PM.", "last_plan": "(QueryEventResponseIsNonEmpty (FindEventWrapperWithDefaults (& (Event.attendees_? (WithAttendeeNamed \"Dale Walker\")) (Event.duringDateRangeConstraint_? (ThisWeek)))))", "plan": "(Execute (ReviseConstraint (DefaultRootLocation) (^(Event) ConstraintTypeIntension) (Event.duringDateRangeConstraint_? (NextWeekList))))", "oracle_rewritten_utterance": "Do I have any event scheduled with Dale Walker next week?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic Event) ReviseConstraint :rootLocation ^(CalflowIntension Dynamic) (DefaultRootLocation) :oldLocation ^(Constraint (CalflowIntension (Constraint Event))) (^(Event) ConstraintTypeIntension) :new ^(Constraint Event) (Event.duringDateRangeConstraint_? :date_range_constraint ^(Constraint Date) (NextWeekList))))"}
{"dialogue_id": "80f7625b-cc09-4666-9607-1f27127adf97", "turn_part_id": 2, "utterance": "How about the next day, do I have any events?", "last_user_utterance": "Am I doing anything for Halloween?", "last_agent_utterance": "No, I didn't find any events on your calendar on November 1st.", "last_plan": "(QueryEventResponseIsNonEmpty (FindEventWrapperWithDefaults (Event.onDate_? (NextHolidayFromToday (Holiday.Halloween)))))", "plan": "(Execute (ReviseConstraint (DefaultRootLocation) (^(Event) ConstraintTypeIntension) (Event.onDate_? (adjustByPeriod (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toDays 1)))))", "oracle_rewritten_utterance": "Am I do anything for the next day after Halloween?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic Event) ReviseConstraint :rootLocation ^(CalflowIntension Dynamic) (DefaultRootLocation) :oldLocation ^(Constraint (CalflowIntension (Constraint Event))) (^(Event) ConstraintTypeIntension) :new ^(Constraint Event) (Event.onDate_? :date ^Date (adjustByPeriod :date ^Date (^(Date) Execute :intension ^(CalflowIntension Date) (^(Date) refer :constraint ^(Constraint (CalflowIntension Date)) (^(Date) extensionConstraint :constraint ^(Constraint Date) (^(Date) EmptyStructConstraint)))) :period ^Period (toDays :days ^Number 1)))))"}
{"dialogue_id": "ef720727-502b-4176-a4d3-f2f0c4946d4a", "turn_part_id": 4, "utterance": "What about the next week with Kim?", "last_user_utterance": "Do I have any events with Kim next week?", "last_agent_utterance": "Yes, I found one event with Kim. It's \"rake in the lake\" from 12:00 to 12:30 PM.", "last_plan": "(QueryEventResponseIsNonEmpty (FindEventWrapperWithDefaults (& (Event.attendees_? (WithAttendeeNamed \"Kim\")) (Event.duringDateRangeConstraint_? (NextWeekList)))))", "plan": "(Execute (ReviseConstraint (DefaultRootLocation) (^(Event) ConstraintTypeIntension) (& (Event.attendees_? (WithAttendeeNamed \"Kim\")) (Event.duringDateRangeConstraint_? (NextWeekList)))))", "oracle_rewritten_utterance": "Do I have any events with the week after next with Kim?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic Event) ReviseConstraint :rootLocation ^(CalflowIntension Dynamic) (DefaultRootLocation) :oldLocation ^(Constraint (CalflowIntension (Constraint Event))) (^(Event) ConstraintTypeIntension) :new ^(Constraint Event) (^(Event) & :c1 ^(Constraint Event) (Event.attendees_? :obj ^(Constraint (List Attendee)) (WithAttendeeNamed :name ^String \"Kim\")) :c2 ^(Constraint Event) (Event.duringDateRangeConstraint_? :date_range_constraint ^(Constraint Date) (NextWeekList)))))"}
{"dialogue_id": "802505dd-120b-4994-b35e-ebfe29d9b8e1", "turn_part_id": 1, "utterance": "No, the country club in Florida next month", "last_user_utterance": "Do I have anything scheduled at the country club next week?", "last_agent_utterance": "Yes, I found one event next month at country club in Florida. It's \"Appointment\" on April 4th from 3:00 to 3:30 PM.", "last_plan": "(QueryEventResponseIsNonEmpty (FindEventWrapperWithDefaults (& (Event.duringDateRangeConstraint_? (NextWeekList)) (Event.location_? (?= (LocationKeyphrase.apply \"country club\"))))))", "plan": "(Execute (ReviseConstraint (DefaultRootLocation) (^(Event) ConstraintTypeIntension) (& (Event.duringDateRangeConstraint_? (FullMonthofMonth (NextMonth))) (Event.location_? (?= (LocationKeyphrase.apply \"country club in Florida\"))))))", "oracle_rewritten_utterance": "Do I have anything scheduled at the country club in Florida next month?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic Event) ReviseConstraint :rootLocation ^(CalflowIntension Dynamic) (DefaultRootLocation) :oldLocation ^(Constraint (CalflowIntension (Constraint Event))) (^(Event) ConstraintTypeIntension) :new ^(Constraint Event) (^(Event) & :c1 ^(Constraint Event) (Event.duringDateRangeConstraint_? :date_range_constraint ^(Constraint Date) (FullMonthofMonth :month ^Month (NextMonth))) :c2 ^(Constraint Event) (Event.location_? :obj ^(Constraint LocationKeyphrase) (^(LocationKeyphrase) ?= :reference ^LocationKeyphrase (LocationKeyphrase.apply :inner ^String \"country club in Florida\"))))))"}
{"dialogue_id": "268b5062-46a4-4c19-a256-23f46bf6110a", "turn_part_id": 4, "utterance": "i meant pick up poop in May", "last_user_utterance": "Cool, now can you tell me do I have a Coffee Date this weekend?", "last_agent_utterance": "Yes, I found one event matching \"pick up poop\" in May. It's \"Pick up Dog Poop\" from 4:00 to 4:30 PM.", "last_plan": "(QueryEventResponseIsNonEmpty (FindEventWrapperWithDefaults (& (Event.duringDateRangeConstraint_? (ThisWeekend)) (Event.subject_? (?~= \"Coffee Date\")))))", "plan": "(Execute (ReviseConstraint (DefaultRootLocation) (^(Event) ConstraintTypeIntension) (& (Event.duringDateRangeConstraint_? (FullMonthofMonth (May))) (Event.subject_? (?~= \"pick up poop\")))))", "oracle_rewritten_utterance": "Cool, now can you tell me do I have a pick up poop in May?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic Event) ReviseConstraint :rootLocation ^(CalflowIntension Dynamic) (DefaultRootLocation) :oldLocation ^(Constraint (CalflowIntension (Constraint Event))) (^(Event) ConstraintTypeIntension) :new ^(Constraint Event) (^(Event) & :c1 ^(Constraint Event) (Event.duringDateRangeConstraint_? :date_range_constraint ^(Constraint Date) (FullMonthofMonth :month ^Month (May))) :c2 ^(Constraint Event) (Event.subject_? :obj ^(Constraint String) (?~= :reference ^String \"pick up poop\")))))"}
{"dialogue_id": "c8b700ea-d162-4515-98e3-ec7145ce9faf", "turn_part_id": 3, "utterance": "How about the next day?", "last_user_utterance": "Do I have any events on June 4th?", "last_agent_utterance": "I didn't find any events on your calendar.", "last_plan": "(QueryEventResponseIsNonEmpty (FindEventWrapperWithDefaults (Event.onDate_? (MD 4L (June)))))", "plan": "(Execute (ReviseConstraint (DefaultRootLocation) (^(Event) ConstraintTypeIntension) (Event.onDate_? (adjustByPeriod (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toDays 1)))))", "oracle_rewritten_utterance": "Do I have any events the next day after June 4th?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic Event) ReviseConstraint :rootLocation ^(CalflowIntension Dynamic) (DefaultRootLocation) :oldLocation ^(Constraint (CalflowIntension (Constraint Event))) (^(Event) ConstraintTypeIntension) :new ^(Constraint Event) (Event.onDate_? :date ^Date (adjustByPeriod :date ^Date (^(Date) Execute :intension ^(CalflowIntension Date) (^(Date) refer :constraint ^(Constraint (CalflowIntension Date)) (^(Date) extensionConstraint :constraint ^(Constraint Date) (^(Date) EmptyStructConstraint)))) :period ^Period (toDays :days ^Number 1)))))"}
{"dialogue_id": "6f3d0900-4ec6-408c-9f53-eadf1b57b855", "turn_part_id": 1, "utterance": "I meant Binge Eating", "last_user_utterance": "Am I scheduled to go bungee jumping this weekend?", "last_agent_utterance": "Yes, I found one event matching \"Binge Eating\" this weekend. It's from 10:00 to 10:30 AM.", "last_plan": "(QueryEventResponseIsNonEmpty (FindEventWrapperWithDefaults (& (Event.duringDateRangeConstraint_? (ThisWeekend)) (Event.subject_? (?~= \"bungee jumping\")))))", "plan": "(Execute (ReviseConstraint (DefaultRootLocation) (^(Event) ConstraintTypeIntension) (Event.subject_? (?~= \"Binge Eating\"))))", "oracle_rewritten_utterance": "Am I scheduled to go Binge Eating this weekend?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic Event) ReviseConstraint :rootLocation ^(CalflowIntension Dynamic) (DefaultRootLocation) :oldLocation ^(Constraint (CalflowIntension (Constraint Event))) (^(Event) ConstraintTypeIntension) :new ^(Constraint Event) (Event.subject_? :obj ^(Constraint String) (?~= :reference ^String \"Binge Eating\"))))"}
{"dialogue_id": "d40a5fe9-e2e1-4f94-966f-007dbce969c6", "turn_part_id": 4, "utterance": "What about December?", "last_user_utterance": "Do I have any appointments later in the month of November?", "last_agent_utterance": "Yes, I found one event in December. It's an \"Appointment\" on December 2nd from 11:00 to 11:30 AM.", "last_plan": "(QueryEventResponseIsNonEmpty (FindEventWrapperWithDefaults (Event.duringDateRangeConstraint_? (FullMonthofMonth (November)))))", "plan": "(Execute (ReviseConstraint (DefaultRootLocation) (^(Event) ConstraintTypeIntension) (Event.duringDateRangeConstraint_? (FullMonthofMonth (December)))))", "oracle_rewritten_utterance": "Do I have any appointments later in the month of December?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic Event) ReviseConstraint :rootLocation ^(CalflowIntension Dynamic) (DefaultRootLocation) :oldLocation ^(Constraint (CalflowIntension (Constraint Event))) (^(Event) ConstraintTypeIntension) :new ^(Constraint Event) (Event.duringDateRangeConstraint_? :date_range_constraint ^(Constraint Date) (FullMonthofMonth :month ^Month (December)))))"}
{"dialogue_id": "b081edc5-8b3c-4d18-8e20-12df11ca38c9", "turn_part_id": 1, "utterance": "Dang, what about winter?", "last_user_utterance": "Do I have something in the fall?", "last_agent_utterance": "No, I didn't find any events between December 1st and February 29, 2020.", "last_plan": "(QueryEventResponseIsNonEmpty (FindEventWrapperWithDefaults (Event.duringDateRangeConstraint_? (SeasonFall))))", "plan": "(Execute (ReviseConstraint (DefaultRootLocation) (^(Event) ConstraintTypeIntension) (Event.duringDateRangeConstraint_? (SeasonWinter))))", "oracle_rewritten_utterance": "Do I have something in the winter?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic Event) ReviseConstraint :rootLocation ^(CalflowIntension Dynamic) (DefaultRootLocation) :oldLocation ^(Constraint (CalflowIntension (Constraint Event))) (^(Event) ConstraintTypeIntension) :new ^(Constraint Event) (Event.duringDateRangeConstraint_? :date_range_constraint ^(Constraint Date) (SeasonWinter))))"}
{"dialogue_id": "480a535b-136c-4a70-9fc1-8bb2b633455b", "turn_part_id": 1, "utterance": "i meant do i have a lunch meeting with kim tomorrow", "last_user_utterance": "Do I have an lunch meeting in 2 weeks?", "last_agent_utterance": "Yes, I found one event matching \"lunch meeting\" with kim tomorrow. It's \"lunch meeting\" from 11:00 to 11:30 AM.", "last_plan": "(QueryEventResponseIsNonEmpty (FindEventWrapperWithDefaults (& (Event.duringDateRangeConstraint_? (NextPeriod (toWeeks 2))) (Event.subject_? (?~= \"lunch meeting\")))))", "plan": "(Execute (ReviseConstraint (DefaultRootLocation) (^(Event) ConstraintTypeIntension) (& (Event.attendees_? (WithAttendeeNamed \"kim\")) (& (Event.onDate_? (Tomorrow)) (Event.subject_? (?~= \"lunch meeting\"))))))", "oracle_rewritten_utterance": "Do I have a lunch meeting with kim tomorrow?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic Event) ReviseConstraint :rootLocation ^(CalflowIntension Dynamic) (DefaultRootLocation) :oldLocation ^(Constraint (CalflowIntension (Constraint Event))) (^(Event) ConstraintTypeIntension) :new ^(Constraint Event) (^(Event) & :c1 ^(Constraint Event) (Event.attendees_? :obj ^(Constraint (List Attendee)) (WithAttendeeNamed :name ^String \"kim\")) :c2 ^(Constraint Event) (^(Event) & :c1 ^(Constraint Event) (Event.onDate_? :date ^Date (Tomorrow)) :c2 ^(Constraint Event) (Event.subject_? :obj ^(Constraint String) (?~= :reference ^String \"lunch meeting\"))))))"}
{"dialogue_id": "f5001d68-bcb6-44ff-8486-5cabaa39b3eb", "turn_part_id": 3, "utterance": "Or check I am eating burger tomorrow.", "last_user_utterance": "Am I eating cake tomorrow?", "last_agent_utterance": "Yes, I found one event matching \"eating burger\" tomorrow. It's from 6:00 to 6:30 PM.", "last_plan": "(QueryEventResponseIsNonEmpty (FindEventWrapperWithDefaults (& (Event.onDate_? (Tomorrow)) (Event.subject_? (?~= \"eating cake\")))))", "plan": "(Execute (ReviseConstraint (DefaultRootLocation) (^(Event) ConstraintTypeIntension) (& (Event.onDate_? (Tomorrow)) (Event.subject_? (?~= \"eating burger\")))))", "oracle_rewritten_utterance": "Am I eating burger tomorrow?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic Event) ReviseConstraint :rootLocation ^(CalflowIntension Dynamic) (DefaultRootLocation) :oldLocation ^(Constraint (CalflowIntension (Constraint Event))) (^(Event) ConstraintTypeIntension) :new ^(Constraint Event) (^(Event) & :c1 ^(Constraint Event) (Event.onDate_? :date ^Date (Tomorrow)) :c2 ^(Constraint Event) (Event.subject_? :obj ^(Constraint String) (?~= :reference ^String \"eating burger\")))))"}
{"dialogue_id": "86cd9a14-5fef-44e7-9500-c5d27d20e2db", "turn_part_id": 1, "utterance": "I meant AM, my prob", "last_user_utterance": "Do I have anything next week at 10 pm?", "last_agent_utterance": "Yes, I found one event. It's a \"Company Coffee\".", "last_plan": "(QueryEventResponseIsNonEmpty (FindEventWrapperWithDefaults (& (Event.duringDateRangeConstraint_? (NextWeekList)) (Event.start_? (DateTime.time_? (?= (NumberPM 10L)))))))", "plan": "(Execute (ReviseConstraint (DefaultRootLocation) (^(Event) ConstraintTypeIntension) (Event.start_? (DateTime.time_? (?= (ConvertTimeToAM (Execute (refer (& (extensionConstraint (^(Time) EmptyStructConstraint)) (^(Time) roleConstraint (Path.apply \"start\")))))))))))", "oracle_rewritten_utterance": "Do I have anything next week at 10 AM?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic Event) ReviseConstraint :rootLocation ^(CalflowIntension Dynamic) (DefaultRootLocation) :oldLocation ^(Constraint (CalflowIntension (Constraint Event))) (^(Event) ConstraintTypeIntension) :new ^(Constraint Event) (Event.start_? :obj ^(Constraint DateTime) (DateTime.time_? :obj ^(Constraint Time) (^(Time) ?= :reference ^Time (ConvertTimeToAM :time ^Time (^(Time) Execute :intension ^(CalflowIntension Time) (^(Time) refer :constraint ^(Constraint (CalflowIntension Time)) (^((CalflowIntension Time)) & :c1 ^(Constraint (CalflowIntension Time)) (^(Time) extensionConstraint :constraint ^(Constraint Time) (^(Time) EmptyStructConstraint)) :c2 ^(Constraint (CalflowIntension Time)) (^(Time) roleConstraint :path ^Path (Path.apply :inner ^String \"start\")))))))))))"}
{"dialogue_id": "c42afe08-b83c-43fd-990c-1999c8e59f86", "turn_part_id": 2, "utterance": "What about the day before?", "last_user_utterance": "Do I have any meetings scheduled anytime after Wednesday?", "last_agent_utterance": "No, I didn't find any events.", "last_plan": "(QueryEventResponseIsNonEmpty (FindEventWrapperWithDefaults (Event.start_? (DateTime.date_? (?> (NextDateOnDow (Wednesday)))))))", "plan": "(Execute (ReviseConstraint (DefaultRootLocation) (^(Event) ConstraintTypeIntension) (Event.onDate_? (PeriodBeforeDate (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toDays 1)))))", "oracle_rewritten_utterance": "Do I have any meetings scheduled the day before Wednesday?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic Event) ReviseConstraint :rootLocation ^(CalflowIntension Dynamic) (DefaultRootLocation) :oldLocation ^(Constraint (CalflowIntension (Constraint Event))) (^(Event) ConstraintTypeIntension) :new ^(Constraint Event) (Event.onDate_? :date ^Date (PeriodBeforeDate :date ^Date (^(Date) Execute :intension ^(CalflowIntension Date) (^(Date) refer :constraint ^(Constraint (CalflowIntension Date)) (^(Date) extensionConstraint :constraint ^(Constraint Date) (^(Date) EmptyStructConstraint)))) :period ^Period (toDays :days ^Number 1)))))"}
{"dialogue_id": "f0eb49c4-4ab9-485e-b431-f7d656f5163f", "turn_part_id": 1, "utterance": "What about Kim or Jesse?", "last_user_utterance": "Am I meeting with David and Elli at all this week?", "last_agent_utterance": "Yes, I found one event with Kim or Jesse this week. It's \"Meeting with Kim Possible and Damon Straeter\" tomorrow from 4:00 to 4:30 PM.", "last_plan": "(QueryEventResponseIsNonEmpty (FindEventWrapperWithDefaults (& (Event.attendees_? (& (WithAttendeeNamed \"David\") (WithAttendeeNamed \"Elli\"))) (Event.duringDateRangeConstraint_? (ThisWeek)))))", "plan": "(Execute (NewClobber (DefaultIntension) (extensionConstraint (alwaysTrueConstraintConstraint (^((List Attendee)) AlwaysTrueConstraint))) (intension (orConstraint (WithAttendeeNamed \"Kim\") (WithAttendeeNamed \"Jesse\")))))", "oracle_rewritten_utterance": "Am I meeting with Kim or Jesse at all this week?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint (List Attendee))) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint (List Attendee)))) (^((Constraint (List Attendee))) extensionConstraint :constraint ^(Constraint (Constraint (List Attendee))) (^((List Attendee)) alwaysTrueConstraintConstraint :typeConstraint ^(Constraint (List Attendee)) (^((List Attendee)) AlwaysTrueConstraint))) :value ^(CalflowIntension (Constraint (List Attendee))) (^((Constraint (List Attendee))) intension :extension ^(Constraint (List Attendee)) (^((List Attendee)) orConstraint :constraint1 ^(Constraint (List Attendee)) (WithAttendeeNamed :name ^String \"Kim\") :constraint2 ^(Constraint (List Attendee)) (WithAttendeeNamed :name ^String \"Jesse\")))))"}
{"dialogue_id": "5a085c7d-6df3-4ef6-a43a-611869bc022f", "turn_part_id": 3, "utterance": "How about with Ronald?", "last_user_utterance": "Do I have any scheduled with Richard next month?", "last_agent_utterance": "Yes, I found one matching event on your calendar. It's \"Meeting with Ronald and Damon Straeter\" on October 10th from 2:00 to 2:30 PM.", "last_plan": "(QueryEventResponseIsNonEmpty (FindEventWrapperWithDefaults (& (Event.attendees_? (WithAttendeeNamed \"Richard\")) (Event.duringDateRangeConstraint_? (FullMonthofMonth (NextMonth))))))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ronald\")))))", "oracle_rewritten_utterance": "Do I have any scheduled with Ronald next month?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"Ronald\")))))"}
{"dialogue_id": "410a3a51-4ecb-4490-8f24-c908acd2beed", "turn_part_id": 3, "utterance": "What about with Jennifer and Abby?", "last_user_utterance": "Do I have any appointments with Kim, Dan, or Elli coming up next week?", "last_agent_utterance": "No, I didn't find any events with Jennifer and Abby.", "last_plan": "(QueryEventResponseIsNonEmpty (FindEventWrapperWithDefaults (& (Event.attendees_? (orConstraint (orConstraint (WithAttendeeNamed \"Kim\") (WithAttendeeNamed \"Dan\")) (WithAttendeeNamed \"Elli\"))) (Event.duringDateRangeConstraint_? (NextWeekList)))))", "plan": "(Execute (NewClobber (DefaultIntension) (extensionConstraint (alwaysTrueConstraintConstraint (^((List Attendee)) AlwaysTrueConstraint))) (intension (& (WithAttendeeNamed \"Abby\") (WithAttendeeNamed \"Jennifer\")))))", "oracle_rewritten_utterance": "Do I have any appointments with Jennifer and Abby coming up next week?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint (List Attendee))) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint (List Attendee)))) (^((Constraint (List Attendee))) extensionConstraint :constraint ^(Constraint (Constraint (List Attendee))) (^((List Attendee)) alwaysTrueConstraintConstraint :typeConstraint ^(Constraint (List Attendee)) (^((List Attendee)) AlwaysTrueConstraint))) :value ^(CalflowIntension (Constraint (List Attendee))) (^((Constraint (List Attendee))) intension :extension ^(Constraint (List Attendee)) (^((List Attendee)) & :c1 ^(Constraint (List Attendee)) (WithAttendeeNamed :name ^String \"Abby\") :c2 ^(Constraint (List Attendee)) (WithAttendeeNamed :name ^String \"Jennifer\")))))"}
{"dialogue_id": "1e92df1f-cf10-4cb8-b31e-7a24b0e1cc43", "turn_part_id": 4, "utterance": "What about Sarah?", "last_user_utterance": "Do I have any meetings with Samuel?", "last_agent_utterance": "No, I didn't find any events with Sarah on your calendar.", "last_plan": "(QueryEventResponseIsNonEmpty (FindEventWrapperWithDefaults (Event.attendees_? (WithAttendeeNamed \"Samuel\"))))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sarah\")))))", "oracle_rewritten_utterance": "Do I have any meetings with Sarah?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"Sarah\")))))"}
{"dialogue_id": "9c33ac32-f333-4269-bbe1-b1e582970340", "turn_part_id": 4, "utterance": "how about Ron?", "last_user_utterance": "Is Annie attending the conference as well?", "last_agent_utterance": "Yes, I found one event matching \"conference\" with Ron. It's \"conference\" on Friday from 8:00 to 8:30 AM.", "last_plan": "(QueryEventResponseIsNonEmpty (FindEventWrapperWithDefaults (& (Event.attendees_? (WithAttendeeNamed \"Annie\")) (Event.subject_? (?~= \"conference\")))))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Ron\")))))", "oracle_rewritten_utterance": "Is Ron attending the conference as well?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"Ron\")))))"}
{"dialogue_id": "002984ed-e4bf-4967-bf8d-e78e9a4deb76", "turn_part_id": 4, "utterance": "What about Harry?", "last_user_utterance": "Did I already meet with Josephine last week?", "last_agent_utterance": "No, I didn't find any events with Harry last week.", "last_plan": "(QueryEventResponseIsNonEmpty (FindEventWrapperWithDefaults (& (Event.attendees_? (WithAttendeeNamed \"Josephine\")) (Event.duringDateRangeConstraint_? (LastWeekNew)))))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Harry\")))))", "oracle_rewritten_utterance": "Did I already meet with Harry last week?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"Harry\")))))"}
{"dialogue_id": "c19f7b4a-5d51-4fd4-8743-e5710a9ecd4b", "turn_part_id": 1, "utterance": "What about with Jan Burnette?", "last_user_utterance": "Do I have any meetings with Dan Peachy for the week of July 1st?", "last_agent_utterance": "Yes, I found one event with Jan Burnette between June 30th and July 6th. It's \"Fireworks preview\" from 2:00 to 2:30 PM.", "last_plan": "(QueryEventResponseIsNonEmpty (FindEventWrapperWithDefaults (& (Event.attendees_? (WithAttendeeNamed \"Dan Peachy\")) (Event.duringDateRangeConstraint_? (WeekOfDateNew (MD 1L (July)))))))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jan Burnette\")))))", "oracle_rewritten_utterance": "Do I have any meetings with Jan Burnette for the week of July 1st?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"Jan Burnette\")))))"}
{"dialogue_id": "a2143d98-a841-4edb-9bdf-3550b38bfd4b", "turn_part_id": 2, "utterance": "What about with Peyton and Marco?", "last_user_utterance": "Do I have any events coming up with Peyton?", "last_agent_utterance": "Yes, I found one matching event on your calendar. It's \"Play-It-Again-Sports\" on Thursday from 7:00 to 7:30 PM.", "last_plan": "(QueryEventResponseIsNonEmpty (FindEventWrapperWithDefaults (Event.attendees_? (WithAttendeeNamed \"Peyton\"))))", "plan": "(Execute (NewClobber (DefaultIntension) (extensionConstraint (alwaysTrueConstraintConstraint (^((List Attendee)) AlwaysTrueConstraint))) (intension (& (WithAttendeeNamed \"Marco\") (WithAttendeeNamed \"Peyton\")))))", "oracle_rewritten_utterance": "Do I have any events coming up with Peyton and Marco?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint (List Attendee))) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint (List Attendee)))) (^((Constraint (List Attendee))) extensionConstraint :constraint ^(Constraint (Constraint (List Attendee))) (^((List Attendee)) alwaysTrueConstraintConstraint :typeConstraint ^(Constraint (List Attendee)) (^((List Attendee)) AlwaysTrueConstraint))) :value ^(CalflowIntension (Constraint (List Attendee))) (^((Constraint (List Attendee))) intension :extension ^(Constraint (List Attendee)) (^((List Attendee)) & :c1 ^(Constraint (List Attendee)) (WithAttendeeNamed :name ^String \"Marco\") :c2 ^(Constraint (List Attendee)) (WithAttendeeNamed :name ^String \"Peyton\")))))"}
{"dialogue_id": "d1ee114f-3320-4335-827c-4c6f9a1dfddf", "turn_part_id": 3, "utterance": "What about Tim?", "last_user_utterance": "Do I have anything scheduled with Tammy in October as well?", "last_agent_utterance": "No, I didn't find any events with Tim in October.", "last_plan": "(QueryEventResponseIsNonEmpty (FindEventWrapperWithDefaults (& (Event.attendees_? (WithAttendeeNamed \"Tammy\")) (Event.duringDateRangeConstraint_? (FullMonthofMonth (October))))))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tim\")))))", "oracle_rewritten_utterance": "Do I have anything scheduled with Tim in October as well?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"Tim\")))))"}
{"dialogue_id": "ed8187da-42c4-4d4f-8b0a-5c680d3e1923", "turn_part_id": 1, "utterance": "What about with Martha?", "last_user_utterance": "Do I have anything scheduled next week with Liz?", "last_agent_utterance": "Yes, I found 2 events with Martha next week. The first is \"Meeting with Martha and Damon Straeter\" on Monday the 9th from 10:00 to 10:30 AM.", "last_plan": "(QueryEventResponseIsNonEmpty (FindEventWrapperWithDefaults (& (Event.attendees_? (WithAttendeeNamed \"Liz\")) (Event.duringDateRangeConstraint_? (NextWeekList)))))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Martha\")))))", "oracle_rewritten_utterance": "Do I have anything scheduled next week with Martha?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"Martha\")))))"}
{"dialogue_id": "cd1b1447-191f-4401-a918-7fd1b7c58bb3", "turn_part_id": 2, "utterance": "What about with Terry?", "last_user_utterance": "Did I have an y appointments with Sue yesterday?", "last_agent_utterance": "No, I didn't find any events with Terry on Tuesday.", "last_plan": "(QueryEventResponseIsNonEmpty (FindEventWrapperWithDefaults (& (Event.attendees_? (WithAttendeeNamed \"Sue\")) (Event.onDate_? (Yesterday)))))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Terry\")))))", "oracle_rewritten_utterance": "Did I have an y appointments with Terry yesterday?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"Terry\")))))"}
{"dialogue_id": "fa411f73-439d-4b80-af64-1c1934377ff2", "turn_part_id": 3, "utterance": "What about Dave M. Walters?", "last_user_utterance": "Do I have any events with Jill next week?", "last_agent_utterance": "I found 1 on your calendar. It's \"Meeting with Dave M. Walters and Damon Straeter\" on Friday the 20th from 12:00 to 12:30 PM.", "last_plan": "(QueryEventResponseIsNonEmpty (FindEventWrapperWithDefaults (& (Event.attendees_? (WithAttendeeNamed \"Jill\")) (Event.duringDateRangeConstraint_? (NextWeekList)))))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Dave M. Walters\")))))", "oracle_rewritten_utterance": "Do I have any events with Dave M. Walters next week?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"Dave M. Walters\")))))"}
{"dialogue_id": "59020d1e-53d6-4416-916a-1f539e264d69", "turn_part_id": 2, "utterance": "Wait I meant Kim and Loki", "last_user_utterance": "Do I have any meetings with Jane and Thor this week>", "last_agent_utterance": "Yes, I found one event with Kim Possible and Loki this week. It's \"Movie Watching\" from 10:00 to 10:30 AM.", "last_plan": "(QueryEventResponseIsNonEmpty (FindEventWrapperWithDefaults (& (Event.attendees_? (& (WithAttendeeNamed \"Jane\") (WithAttendeeNamed \"Thor\"))) (Event.duringDateRangeConstraint_? (ThisWeek)))))", "plan": "(Execute (NewClobber (DefaultIntension) (extensionConstraint (alwaysTrueConstraintConstraint (^((List Attendee)) AlwaysTrueConstraint))) (intension (& (WithAttendeeNamed \"Kim\") (WithAttendeeNamed \"Loki\")))))", "oracle_rewritten_utterance": "Do I have any meetings with Kim and Loki this week>", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint (List Attendee))) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint (List Attendee)))) (^((Constraint (List Attendee))) extensionConstraint :constraint ^(Constraint (Constraint (List Attendee))) (^((List Attendee)) alwaysTrueConstraintConstraint :typeConstraint ^(Constraint (List Attendee)) (^((List Attendee)) AlwaysTrueConstraint))) :value ^(CalflowIntension (Constraint (List Attendee))) (^((Constraint (List Attendee))) intension :extension ^(Constraint (List Attendee)) (^((List Attendee)) & :c1 ^(Constraint (List Attendee)) (WithAttendeeNamed :name ^String \"Kim\") :c2 ^(Constraint (List Attendee)) (WithAttendeeNamed :name ^String \"Loki\")))))"}
{"dialogue_id": "b03e90d3-9d21-4893-b125-4a9918dce063", "turn_part_id": 1, "utterance": "What about with Arwen?", "last_user_utterance": "Will I be meeting with Aragorn next week?", "last_agent_utterance": "No, I didn't find any events with Arwen this week.", "last_plan": "(QueryEventResponseIsNonEmpty (FindEventWrapperWithDefaults (& (Event.attendees_? (WithAttendeeNamed \"Aragorn\")) (Event.duringDateRangeConstraint_? (NextWeekList)))))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Arwen\")))))", "oracle_rewritten_utterance": "Will I be meeting with Arwen next week?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"Arwen\")))))"}
{"dialogue_id": "1721a47e-7137-44b7-92fa-283957bcb45e", "turn_part_id": 1, "utterance": "I meant Barker Bows", "last_user_utterance": "Do I have any events with Parker Paws this month?", "last_agent_utterance": "I found 1 on your calendar. It's \"Lukewarm Bath\" on Monday the 23rd from 3:00 to 3:30 PM.", "last_plan": "(QueryEventResponseIsNonEmpty (FindEventWrapperWithDefaults (& (Event.attendees_? (WithAttendeeNamed \"Parker Paws\")) (Event.duringDateRangeConstraint_? (FullMonthofMonth (Date.month (Today)))))))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Barker Bows\")))))", "oracle_rewritten_utterance": "Do I have any events with Barker Bows this month?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"Barker Bows\")))))"}
{"dialogue_id": "fd88923c-7c82-480e-bc0e-6dd6305f1cf9", "turn_part_id": 4, "utterance": "What about Trent", "last_user_utterance": "Do I have any appointments with Larry?", "last_agent_utterance": "Yes, I found one event with Trent on your calendar. It's \"Make Macarons not Macaroons\" on Saturday from 10:00 AM to 2:00 PM.", "last_plan": "(QueryEventResponseIsNonEmpty (FindEventWrapperWithDefaults (Event.attendees_? (WithAttendeeNamed \"Larry\"))))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Trent\")))))", "oracle_rewritten_utterance": "Do I have any appointments with Trent?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"Trent\")))))"}
{"dialogue_id": "17df10e0-58c6-49fd-a467-d182cf9b42cf", "turn_part_id": 2, "utterance": "What about with Sandra?", "last_user_utterance": "Do I have a meeting with Don anytime soon?", "last_agent_utterance": "Yes, I found one event on your calendar. It's \"Interview\" on Monday the 16th from 3:15 to 3:45 PM.", "last_plan": "(QueryEventResponseIsNonEmpty (FindEventWrapperWithDefaults (Event.attendees_? (WithAttendeeNamed \"Don\"))))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sandra\")))))", "oracle_rewritten_utterance": "Do I have a meeting with Sandra anything soon?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"Sandra\")))))"}
{"dialogue_id": "5903fb48-bc88-48c5-9c48-927f355e110a", "turn_part_id": 1, "utterance": "What about Bob?", "last_user_utterance": "Do I meet with Ella next week?", "last_agent_utterance": "No, I didn't find any events with Bob next week.", "last_plan": "(QueryEventResponseIsNonEmpty (FindEventWrapperWithDefaults (& (Event.attendees_? (WithAttendeeNamed \"Ella\")) (Event.duringDateRangeConstraint_? (NextWeekList)))))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bob\")))))", "oracle_rewritten_utterance": "Do I meet with Bob next week?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"Bob\")))))"}
{"dialogue_id": "73e0574b-1e80-46ae-ac80-8602d22de498", "turn_part_id": 1, "utterance": "Thanks. I should have one with Bob too, right?", "last_user_utterance": "Will I be meeting with Ashley tomorrow afternoon?", "last_agent_utterance": "Yes, I found one matching event on your calendar. It's \"Lob Bob Corncobs and Sob\" tomorrow from 4:00 to 4:30 PM.", "last_plan": "(QueryEventResponseIsNonEmpty (FindEventWrapperWithDefaults (& (Event.attendees_? (WithAttendeeNamed \"Ashley\")) (& (Event.duringTimeRangeConstraint_? (Afternoon)) (Event.onDate_? (Tomorrow))))))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bob\")))))", "oracle_rewritten_utterance": "Will I be meeting with Bob tomorrow afternoon?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"Bob\")))))"}
{"dialogue_id": "52680165-03cd-467c-b417-8e401af6e9a5", "turn_part_id": 1, "utterance": "I'm sorry, I meant steve", "last_user_utterance": "Can you help me figure out if I'm meeting bob tomorrow?", "last_agent_utterance": "No, I didn't find any events with steve tomorrow.", "last_plan": "(QueryEventResponseIsNonEmpty (FindEventWrapperWithDefaults (& (Event.attendees_? (WithAttendeeNamed \"bob\")) (Event.onDate_? (Tomorrow)))))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"steve\")))))", "oracle_rewritten_utterance": "Can you help me figure out if I'm meeting steve tomorrow?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"steve\")))))"}
{"dialogue_id": "a38f263c-24cf-4542-a1d2-741fcd421e0b", "turn_part_id": 2, "utterance": "and how about with Rod?", "last_user_utterance": "do i have a meeting with Jeff.", "last_agent_utterance": "Yes, I found one event with Rod. It's \"lunch\" on Saturday the 28th from 12:00 to 1:00.", "last_plan": "(QueryEventResponseIsNonEmpty (FindEventWrapperWithDefaults (Event.attendees_? (WithAttendeeNamed \"Jeff\"))))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Rod\")))))", "oracle_rewritten_utterance": "do I have a meeting with Rod?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"Rod\")))))"}
{"dialogue_id": "76c6a86d-d8f6-46ec-a7b3-c0ec839bd8bc", "turn_part_id": 2, "utterance": "what about with Damon Ellery?", "last_user_utterance": "do I have any events with Wade Blakeley?", "last_agent_utterance": "No, I didn't find any events with Damon Ellery.", "last_plan": "(QueryEventResponseIsNonEmpty (FindEventWrapperWithDefaults (Event.attendees_? (WithAttendeeNamed \"Wade Blakeley\"))))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Damon Ellery\")))))", "oracle_rewritten_utterance": "do I have any events with Damon Ellery?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"Damon Ellery\")))))"}
{"dialogue_id": "00dccbc2-4063-47fa-92e8-3f15646f114d", "turn_part_id": 4, "utterance": "What about Greg?", "last_user_utterance": "Am I meeting with Robert this week?", "last_agent_utterance": "Yes, I found one event with Greg this week. It's \"Meeting with Greg, Dan Schoffel and Damon Straeter\" tomorrow from 2:00 to 2:30 PM.", "last_plan": "(QueryEventResponseIsNonEmpty (FindEventWrapperWithDefaults (& (Event.attendees_? (WithAttendeeNamed \"Robert\")) (Event.duringDateRangeConstraint_? (ThisWeek)))))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Greg\")))))", "oracle_rewritten_utterance": "Am I meeting with Greg this week?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"Greg\")))))"}
{"dialogue_id": "081ad74a-fc69-4cff-a0d6-2531cf41a515", "turn_part_id": 4, "utterance": "What about Zach?", "last_user_utterance": "Have I met with Rhonda before?", "last_agent_utterance": "Yes, I found one event with Zach. It was \"Meeting with Zach and Megan Bowen\" on Monday from 3:00 to 3:30 PM.", "last_plan": "(QueryEventResponseIsNonEmpty (FindEventWrapperWithDefaults (& (Event.attendees_? (WithAttendeeNamed \"Rhonda\")) (Event.beforeDateTime_? (Now)))))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Zach\")))))", "oracle_rewritten_utterance": "Have I met with Zach before?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"Zach\")))))"}
{"dialogue_id": "7cfc02c9-9552-43d6-a82d-ff2bef3c5ffb", "turn_part_id": 1, "utterance": "how about with Erin?", "last_user_utterance": "Do I have meeting with John tomorrow?", "last_agent_utterance": "No, I didn't find any events with Erin on Thursday the 24th.", "last_plan": "(QueryEventResponseIsNonEmpty (FindEventWrapperWithDefaults (& (Event.attendees_? (WithAttendeeNamed \"John\")) (Event.onDate_? (Tomorrow)))))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Erin\")))))", "oracle_rewritten_utterance": "Do I have meeting with Erin tomorrow?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"Erin\")))))"}
{"dialogue_id": "04dd8571-b2fe-4f98-b6cd-4bd101ea81f3", "turn_part_id": 1, "utterance": "How about with Sarah?", "last_user_utterance": "Do I have a meeting with Abby tomorrow?", "last_agent_utterance": "No, I didn't find any events with Sarah on October 24th.", "last_plan": "(QueryEventResponseIsNonEmpty (FindEventWrapperWithDefaults (& (Event.attendees_? (WithAttendeeNamed \"Abby\")) (Event.onDate_? (Tomorrow)))))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sarah\")))))", "oracle_rewritten_utterance": "Do I have a meeting with Sarah tomorrow?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"Sarah\")))))"}
{"dialogue_id": "72a1aca3-c491-43b7-90e8-1489f58a4608", "turn_part_id": 1, "utterance": "And what about with Matt?", "last_user_utterance": "Am I meeting with steve?", "last_agent_utterance": "No, I didn't find any events with Matt.", "last_plan": "(QueryEventResponseIsNonEmpty (FindEventWrapperWithDefaults (Event.attendees_? (WithAttendeeNamed \"steve\"))))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Matt\")))))", "oracle_rewritten_utterance": "Am I meeting with Matt?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"Matt\")))))"}
{"dialogue_id": "6c4d9f4f-79c2-4436-9de0-bcfeb3a81b4f", "turn_part_id": 2, "utterance": "What about with Sarah?", "last_user_utterance": "Do I have any events with Karina this month?", "last_agent_utterance": "Yes, I found one event with Sarah this month. It's \"Meeting with Sarah and Damon Straeter\" on Thursday from 12:00 to 12:30 PM.", "last_plan": "(QueryEventResponseIsNonEmpty (FindEventWrapperWithDefaults (& (Event.attendees_? (WithAttendeeNamed \"Karina\")) (Event.duringDateRangeConstraint_? (FullMonthofMonth (Date.month (Today)))))))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sarah\")))))", "oracle_rewritten_utterance": "Do I have any events with Sarah this month?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"Sarah\")))))"}
{"dialogue_id": "252d8642-c22e-4290-96e9-9e1164d1fac4", "turn_part_id": 3, "utterance": "What about Renee?", "last_user_utterance": "Do I see Dave at all this week?", "last_agent_utterance": "Yes, I found one event this week. It's \"Meeting with Renee and Megan Bowen\" tomorrow from 12:00 to 1:00 PM.", "last_plan": "(QueryEventResponseIsNonEmpty (FindEventWrapperWithDefaults (& (Event.attendees_? (WithAttendeeNamed \"Dave\")) (Event.duringDateRangeConstraint_? (ThisWeek)))))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Renee\")))))", "oracle_rewritten_utterance": "Do I see Renee at all this week?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"Renee\")))))"}
{"dialogue_id": "ba354711-0a7a-4959-bf54-4ef381565e43", "turn_part_id": 1, "utterance": "What about Jack?", "last_user_utterance": "Do I have any meetings with Jim.", "last_agent_utterance": "Yes, I found one event with Jack. It's \"Meeting with Jack and Damon Straeter\" on Wednesday the 18th from 11:00 to 11:30 AM.", "last_plan": "(QueryEventResponseIsNonEmpty (FindEventWrapperWithDefaults (Event.attendees_? (WithAttendeeNamed \"Jim\"))))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jack\")))))", "oracle_rewritten_utterance": "Do I have any meetings with Jack.", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"Jack\")))))"}
{"dialogue_id": "11e2c35e-4c9e-405f-9655-ef4caa591e0c", "turn_part_id": 4, "utterance": "look again by park", "last_user_utterance": "What about last Friday, did I have anything with Parker then?", "last_agent_utterance": "No, I didn't find any events with park on Friday the 12th.", "last_plan": "(QueryEventResponseIsNonEmpty (FindEventWrapperWithDefaults (& (Event.attendees_? (WithAttendeeNamed \"Parker\")) (Event.onDate_? (previousDayOfWeek (Today) (Friday))))))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"park\")))))", "oracle_rewritten_utterance": "What about last Friday, did I have anything with park then?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"park\")))))"}
{"dialogue_id": "82ab8e06-45d7-4346-9626-17bd8799a836", "turn_part_id": 1, "utterance": "Anything with Logan?", "last_user_utterance": "Do I have a one-on-one with Scott this week?", "last_agent_utterance": "Yes, I found one one-on-one event with Logan this week. It's \"Meeting with Logan and Damon Straeter\" tomorrow from 9:00 to 9:30 AM.", "last_plan": "(QueryEventResponseIsNonEmpty (FindEventWrapperWithDefaults (& (Event.attendees_? (WithAttendeeNamed \"Scott\")) (& (Event.duringDateRangeConstraint_? (ThisWeek)) (Event.isOneOnOne_? (?= true))))))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Logan\")))))", "oracle_rewritten_utterance": "Do I have a one-on-one with Logan this week?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"Logan\")))))"}
{"dialogue_id": "400d586b-bef7-422c-8a09-055164235c1f", "turn_part_id": 4, "utterance": "What about alex", "last_user_utterance": "Ok. Did I have any planned with Brad?", "last_agent_utterance": "Yes, I found one event with alex. It's \"Meeting with Alex and Damon Straeter\" on Friday from 9:00 to 9:30 AM.", "last_plan": "(QueryEventResponseIsNonEmpty (FindEventWrapperWithDefaults (Event.attendees_? (WithAttendeeNamed \"Brad\"))))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"alex\")))))", "oracle_rewritten_utterance": "Ok. Did I have any planned with alex?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"alex\")))))"}
{"dialogue_id": "5ef42186-c47a-4646-8bd9-be488f485aae", "turn_part_id": 1, "utterance": "What about for Kim?", "last_user_utterance": "Are there any events with Michael scheduled for next week?", "last_agent_utterance": "No, I didn't find any events with Kim next week.", "last_plan": "(QueryEventResponseIsNonEmpty (FindEventWrapperWithDefaults (& (Event.attendees_? (WithAttendeeNamed \"Michael\")) (Event.duringDateRangeConstraint_? (NextWeekList)))))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\")))))", "oracle_rewritten_utterance": "Are there any events with Kim scheduled for next week?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"Kim\")))))"}
{"dialogue_id": "b18b54d3-0749-42e9-accd-e136a98eb9a4", "turn_part_id": 1, "utterance": "What about Battlefield?", "last_user_utterance": "Do I have anything not at Final Destination?", "last_agent_utterance": "Yes, I found 2 matching events on your calendar. The first is \"Appointment\" tomorrow from 2:00 to 2:30 PM.", "last_plan": "(QueryEventResponseIsNonEmpty (FindEventWrapperWithDefaults (Event.location_? (negate (?= (LocationKeyphrase.apply \"Final Destination\"))))))", "plan": "(Execute (NewClobber (DefaultIntension) (extensionConstraint (^(LocationKeyphrase) AlwaysTrueConstraint)) (intension (LocationKeyphrase.apply \"Battlefield\"))))", "oracle_rewritten_utterance": "Do I have anything not at Battlefield?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic LocationKeyphrase) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension LocationKeyphrase)) (^(LocationKeyphrase) extensionConstraint :constraint ^(Constraint LocationKeyphrase) (^(LocationKeyphrase) AlwaysTrueConstraint)) :value ^(CalflowIntension LocationKeyphrase) (^(LocationKeyphrase) intension :extension ^LocationKeyphrase (LocationKeyphrase.apply :inner ^String \"Battlefield\"))))"}
{"dialogue_id": "465b99a9-1ad6-44d1-97ee-93adeb2f9354", "turn_part_id": 3, "utterance": "What about with Elli?", "last_user_utterance": "Do I have a date with Abby or Jennifer this week?", "last_agent_utterance": "Yes, I found one event with Abby or with Elli this week. It's a \"Meeting with Abby Gonano and Damon Straeter\".", "last_plan": "(QueryEventResponseIsNonEmpty (FindEventWrapperWithDefaults (& (Event.attendees_? (orConstraint (WithAttendeeNamed \"Abby\") (WithAttendeeNamed \"Jennifer\"))) (Event.duringDateRangeConstraint_? (ThisWeek)))))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Elli\")))))", "oracle_rewritten_utterance": "Do I have a date with Elli this week?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"Elli\")))))"}
{"dialogue_id": "4f6be50e-09aa-4076-9292-11629dbf5475", "turn_part_id": 4, "utterance": "What about Steve Carroll?", "last_user_utterance": "Do I have any events coming up with Ron?", "last_agent_utterance": "I found one matching event on your calendar. It's \"Public Service Announcement\" on Sunday the 15th from 1:00 to 1:30 PM.", "last_plan": "(QueryEventResponseIsNonEmpty (FindEventWrapperWithDefaults (Event.attendees_? (WithAttendeeNamed \"Ron\"))))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Steve Carroll\")))))", "oracle_rewritten_utterance": "Do I have any events coming up with Steve Carroll?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"Steve Carroll\")))))"}
{"dialogue_id": "07a67b01-06be-4c98-a02b-5e567bea157a", "turn_part_id": 1, "utterance": "And with Bill?", "last_user_utterance": "Do I have any meetings with Bob this week?", "last_agent_utterance": "I found one event with Bill this week. It's \"Meeting with Bill and Damon Straeter\" on Wednesday from 5:00 to 5:30 PM.", "last_plan": "(QueryEventResponseIsNonEmpty (FindEventWrapperWithDefaults (& (Event.attendees_? (WithAttendeeNamed \"Bob\")) (Event.duringDateRangeConstraint_? (ThisWeek)))))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bill\")))))", "oracle_rewritten_utterance": "Do I have any meetings with Bill this week?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"Bill\")))))"}
{"dialogue_id": "dbf0a92d-da66-4cb7-a63d-274d2dde1788", "turn_part_id": 1, "utterance": "I meant this week.", "last_user_utterance": "Find my events on Tuesday.", "last_agent_utterance": "I didn't find any events this week.", "last_plan": "(FindEventWrapperWithDefaults (Event.onDate_? (NextDateOnDow (Tuesday))))", "plan": "(Execute (ReviseConstraint (DefaultRootLocation) (^(Event) ConstraintTypeIntension) (Event.duringDateRangeConstraint_? (ThisWeek))))", "oracle_rewritten_utterance": "Find my events this week.", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic Event) ReviseConstraint :rootLocation ^(CalflowIntension Dynamic) (DefaultRootLocation) :oldLocation ^(Constraint (CalflowIntension (Constraint Event))) (^(Event) ConstraintTypeIntension) :new ^(Constraint Event) (Event.duringDateRangeConstraint_? :date_range_constraint ^(Constraint Date) (ThisWeek))))"}
{"dialogue_id": "ef720727-502b-4176-a4d3-f2f0c4946d4a", "turn_part_id": 1, "utterance": "what about january?", "last_user_utterance": "Can you show me all events for the next month with Mike?", "last_agent_utterance": "I didn't find any events with Mike in January.", "last_plan": "(FindEventWrapperWithDefaults (& (Event.attendees_? (WithAttendeeNamed \"Mike\")) (Event.duringDateRangeConstraint_? (FullMonthofMonth (NextMonth)))))", "plan": "(Execute (ReviseConstraint (DefaultRootLocation) (^(Event) ConstraintTypeIntension) (Event.duringDateRangeConstraint_? (FullMonthofMonth (January)))))", "oracle_rewritten_utterance": "Can you show me all events for january with Mike?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic Event) ReviseConstraint :rootLocation ^(CalflowIntension Dynamic) (DefaultRootLocation) :oldLocation ^(Constraint (CalflowIntension (Constraint Event))) (^(Event) ConstraintTypeIntension) :new ^(Constraint Event) (Event.duringDateRangeConstraint_? :date_range_constraint ^(Constraint Date) (FullMonthofMonth :month ^Month (January)))))"}
{"dialogue_id": "2c67a613-6677-441d-ae37-f2d248a14abf", "turn_part_id": 1, "utterance": "And with Vera?", "last_user_utterance": "What meetings do I have this week with Sarah?", "last_agent_utterance": "I found one event with Sarah and Vera this week. It's \"Meeting with Vera, Sarah, and Damon Straeter\" on Thursday from 11:00 to 11:30 AM.", "last_plan": "(FindEventWrapperWithDefaults (& (Event.attendees_? (WithAttendeeNamed \"Sarah\")) (Event.duringDateRangeConstraint_? (ThisWeek))))", "plan": "(Execute (ReviseConstraint (DefaultRootLocation) (^(Event) ConstraintTypeIntension) (Event.attendees_? (WithAttendeeNamed \"Vera\"))))", "oracle_rewritten_utterance": "What meetings do I have this week with Vera?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic Event) ReviseConstraint :rootLocation ^(CalflowIntension Dynamic) (DefaultRootLocation) :oldLocation ^(Constraint (CalflowIntension (Constraint Event))) (^(Event) ConstraintTypeIntension) :new ^(Constraint Event) (Event.attendees_? :obj ^(Constraint (List Attendee)) (WithAttendeeNamed :name ^String \"Vera\"))))"}
{"dialogue_id": "391f39a6-8519-463b-938a-24c5813ca9e4", "turn_part_id": 1, "utterance": "What about next week?", "last_user_utterance": "What does my week look like?", "last_agent_utterance": "I didn't find any events next week.", "last_plan": "(FindEventWrapperWithDefaults (Event.duringDateRangeConstraint_? (ThisWeek)))", "plan": "(Execute (ReviseConstraint (DefaultRootLocation) (^(Event) ConstraintTypeIntension) (Event.duringDateRangeConstraint_? (NextWeekList))))", "oracle_rewritten_utterance": "What does my next week look like?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic Event) ReviseConstraint :rootLocation ^(CalflowIntension Dynamic) (DefaultRootLocation) :oldLocation ^(Constraint (CalflowIntension (Constraint Event))) (^(Event) ConstraintTypeIntension) :new ^(Constraint Event) (Event.duringDateRangeConstraint_? :date_range_constraint ^(Constraint Date) (NextWeekList))))"}
{"dialogue_id": "ebbe97a9-30e0-4e14-917e-b888fbaeada0", "turn_part_id": 4, "utterance": "Not any at all? What about next monday?", "last_user_utterance": "What do I have next week?", "last_agent_utterance": "I didn't find any events on Monday the 16th.", "last_plan": "(FindEventWrapperWithDefaults (Event.duringDateRangeConstraint_? (NextWeekList)))", "plan": "(Execute (ReviseConstraint (DefaultRootLocation) (^(Event) ConstraintTypeIntension) (Event.onDate_? (NextDateOnDow (Monday)))))", "oracle_rewritten_utterance": "What do I have next monday?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic Event) ReviseConstraint :rootLocation ^(CalflowIntension Dynamic) (DefaultRootLocation) :oldLocation ^(Constraint (CalflowIntension (Constraint Event))) (^(Event) ConstraintTypeIntension) :new ^(Constraint Event) (Event.onDate_? :date ^Date (NextDateOnDow :dow ^DayOfWeek (Monday)))))"}
{"dialogue_id": "64290633-1349-41ea-86a9-3f3aa85dce4c", "turn_part_id": 1, "utterance": "What about later next week?", "last_user_utterance": "What is my later meeting this week ?", "last_agent_utterance": "I didn't find any events between Thursday the 16th and Saturday the 18th.", "last_plan": "(FindEventWrapperWithDefaults (Event.duringDateRangeConstraint_? (LateDateRange (ThisWeek))))", "plan": "(Execute (ReviseConstraint (DefaultRootLocation) (^(Event) ConstraintTypeIntension) (Event.duringDateRangeConstraint_? (LateDateRange (NextWeekList)))))", "oracle_rewritten_utterance": "What is my later meeting next week ?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic Event) ReviseConstraint :rootLocation ^(CalflowIntension Dynamic) (DefaultRootLocation) :oldLocation ^(Constraint (CalflowIntension (Constraint Event))) (^(Event) ConstraintTypeIntension) :new ^(Constraint Event) (Event.duringDateRangeConstraint_? :date_range_constraint ^(Constraint Date) (LateDateRange :dateRange ^(Constraint Date) (NextWeekList)))))"}
{"dialogue_id": "3df2cb08-bc01-4153-b1d0-54b6a9d7bfbb", "turn_part_id": 1, "utterance": "What about in May?", "last_user_utterance": "How many meetings did I have with Chris in April?", "last_agent_utterance": "I didn't find any events with Chris in May.", "last_plan": "(FindEventWrapperWithDefaults (& (Event.attendees_? (WithAttendeeNamed \"Chris\")) (Event.duringDateRangeConstraint_? (FullMonthofMonth (April)))))", "plan": "(Execute (ReviseConstraint (DefaultRootLocation) (^(Event) ConstraintTypeIntension) (Event.duringDateRangeConstraint_? (FullMonthofMonth (May)))))", "oracle_rewritten_utterance": "How many meetings did I have with Chris in May?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic Event) ReviseConstraint :rootLocation ^(CalflowIntension Dynamic) (DefaultRootLocation) :oldLocation ^(Constraint (CalflowIntension (Constraint Event))) (^(Event) ConstraintTypeIntension) :new ^(Constraint Event) (Event.duringDateRangeConstraint_? :date_range_constraint ^(Constraint Date) (FullMonthofMonth :month ^Month (May)))))"}
{"dialogue_id": "3a4ebbd4-e869-4f52-95c7-624cc5944d22", "turn_part_id": 1, "utterance": "I meant Tuesday", "last_user_utterance": "What do I have on Wednesday?", "last_agent_utterance": "I found one event on Tuesday the 26th. It's \"Appointment\" from 12:00 to 12:30 PM.", "last_plan": "(FindEventWrapperWithDefaults (Event.onDate_? (NextDateOnDow (Wednesday))))", "plan": "(Execute (ReviseConstraint (DefaultRootLocation) (^(Event) ConstraintTypeIntension) (Event.onDate_? (NextDateOnDow (Tuesday)))))", "oracle_rewritten_utterance": "What do I have on Tuesday?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic Event) ReviseConstraint :rootLocation ^(CalflowIntension Dynamic) (DefaultRootLocation) :oldLocation ^(Constraint (CalflowIntension (Constraint Event))) (^(Event) ConstraintTypeIntension) :new ^(Constraint Event) (Event.onDate_? :date ^Date (NextDateOnDow :dow ^DayOfWeek (Tuesday)))))"}
{"dialogue_id": "0f1fe3fa-afd9-44be-96a0-9e733ba34075", "turn_part_id": 4, "utterance": "What about the day after tomorrow?", "last_user_utterance": "Then shoe me what are the events i have tomorrow.", "last_agent_utterance": "I found one event on Friday. It's \"Appointment\" from 10:00 to 10:30 PM.", "last_plan": "(FindEventWrapperWithDefaults (Event.onDate_? (Tomorrow)))", "plan": "(Execute (ReviseConstraint (DefaultRootLocation) (^(Event) ConstraintTypeIntension) (Event.onDate_? (adjustByPeriod (Tomorrow) (toDays 1)))))", "oracle_rewritten_utterance": "Then shoe me what are the events i have the day after tomorrow.", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic Event) ReviseConstraint :rootLocation ^(CalflowIntension Dynamic) (DefaultRootLocation) :oldLocation ^(Constraint (CalflowIntension (Constraint Event))) (^(Event) ConstraintTypeIntension) :new ^(Constraint Event) (Event.onDate_? :date ^Date (adjustByPeriod :date ^Date (Tomorrow) :period ^Period (toDays :days ^Number 1)))))"}
{"dialogue_id": "e5b22d7d-f487-4766-b70b-941ace3d6fa0", "turn_part_id": 1, "utterance": "what about May 21?", "last_user_utterance": "What am doing May 19?", "last_agent_utterance": "I found one event on Thursday the 21st. It's \"Let's Run\" from 9:00 AM to 9:30.", "last_plan": "(FindEventWrapperWithDefaults (Event.onDate_? (MD 19L (May))))", "plan": "(Execute (ReviseConstraint (DefaultRootLocation) (^(Event) ConstraintTypeIntension) (Event.onDate_? (MD 21L (May)))))", "oracle_rewritten_utterance": "What am doing May 21?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic Event) ReviseConstraint :rootLocation ^(CalflowIntension Dynamic) (DefaultRootLocation) :oldLocation ^(Constraint (CalflowIntension (Constraint Event))) (^(Event) ConstraintTypeIntension) :new ^(Constraint Event) (Event.onDate_? :date ^Date (MD :day ^Long 21L :month ^Month (May)))))"}
{"dialogue_id": "d845d294-fa77-463d-8876-98f0cd03356d", "turn_part_id": 2, "utterance": "How about the next day?", "last_user_utterance": "What are my meetings on Thursday?", "last_agent_utterance": "I found one event on Friday. It's \"Appointment\" from 11:00 to 11:30 AM.", "last_plan": "(FindEventWrapperWithDefaults (Event.onDate_? (NextDateOnDow (Thursday))))", "plan": "(Execute (ReviseConstraint (DefaultRootLocation) (^(Event) ConstraintTypeIntension) (Event.onDate_? (adjustByPeriod (Execute (refer (extensionConstraint (^(Date) EmptyStructConstraint)))) (toDays 1)))))", "oracle_rewritten_utterance": "What are my meetings on the next day after Thursday?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic Event) ReviseConstraint :rootLocation ^(CalflowIntension Dynamic) (DefaultRootLocation) :oldLocation ^(Constraint (CalflowIntension (Constraint Event))) (^(Event) ConstraintTypeIntension) :new ^(Constraint Event) (Event.onDate_? :date ^Date (adjustByPeriod :date ^Date (^(Date) Execute :intension ^(CalflowIntension Date) (^(Date) refer :constraint ^(Constraint (CalflowIntension Date)) (^(Date) extensionConstraint :constraint ^(Constraint Date) (^(Date) EmptyStructConstraint)))) :period ^Period (toDays :days ^Number 1)))))"}
{"dialogue_id": "ebbe97a9-30e0-4e14-917e-b888fbaeada0", "turn_part_id": 1, "utterance": "Ok. What about for tomorrow?", "last_user_utterance": "What events do I have today?", "last_agent_utterance": "I found 1 tomorrow. It's \"Appointment\" from 12:00 to 12:30 PM.", "last_plan": "(FindEventWrapperWithDefaults (Event.onDate_? (Today)))", "plan": "(Execute (ReviseConstraint (DefaultRootLocation) (^(Event) ConstraintTypeIntension) (Event.onDate_? (Tomorrow))))", "oracle_rewritten_utterance": "What events do I have tomorrow?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic Event) ReviseConstraint :rootLocation ^(CalflowIntension Dynamic) (DefaultRootLocation) :oldLocation ^(Constraint (CalflowIntension (Constraint Event))) (^(Event) ConstraintTypeIntension) :new ^(Constraint Event) (Event.onDate_? :date ^Date (Tomorrow))))"}
{"dialogue_id": "603bf372-32dc-4b29-8d64-0da920663c95", "turn_part_id": 1, "utterance": "Oh, I meant next Thursday.", "last_user_utterance": "what is on my schedule Tuesday?", "last_agent_utterance": "I found one event on October 3rd. It's \"Appointment\" from 11:00 to 11:30 AM.", "last_plan": "(FindEventWrapperWithDefaults (Event.onDate_? (NextDateOnDow (Tuesday))))", "plan": "(Execute (ReviseConstraint (DefaultRootLocation) (^(Event) ConstraintTypeIntension) (Event.onDate_? (NextDateOnDow (Thursday)))))", "oracle_rewritten_utterance": "what is on my schedule next Thursday?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic Event) ReviseConstraint :rootLocation ^(CalflowIntension Dynamic) (DefaultRootLocation) :oldLocation ^(Constraint (CalflowIntension (Constraint Event))) (^(Event) ConstraintTypeIntension) :new ^(Constraint Event) (Event.onDate_? :date ^Date (NextDateOnDow :dow ^DayOfWeek (Thursday)))))"}
{"dialogue_id": "4339bcad-5bdd-44e5-bafa-122a79d87549", "turn_part_id": 2, "utterance": "how about janice kang", "last_user_utterance": "tell me everything i am doing with paige ashworth", "last_agent_utterance": "I didn't find any events with janice kang.", "last_plan": "(FindEventWrapperWithDefaults (Event.attendees_? (WithAttendeeNamed \"paige ashworth\")))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"janice kang\")))))", "oracle_rewritten_utterance": "tell me everything i am doing with janice kang", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"janice kang\")))))"}
{"dialogue_id": "127c4642-3c3c-4835-874c-7bf4d3a64908", "turn_part_id": 9, "utterance": "How about Damon Ellery", "last_user_utterance": "I'd like to see any meetings with Fiona", "last_agent_utterance": "I didn't find any matching events on your calendar.", "last_plan": "(FindEventWrapperWithDefaults (Event.attendees_? (WithAttendeeNamed \"Fiona\")))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Damon Ellery\")))))", "oracle_rewritten_utterance": "I'd like to see any meetings with Damon Ellery", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"Damon Ellery\")))))"}
{"dialogue_id": "db2dee82-f7a4-4952-8029-c3bc1cf4d028", "turn_part_id": 1, "utterance": "What about The Place?", "last_user_utterance": "What events aren't at Coasta Vida?", "last_agent_utterance": "I found one matching event on your calendar. It's \"Work Lunch\" on Sunday the 19th from 2:00 to 2:30 PM.", "last_plan": "(FindEventWrapperWithDefaults (Event.location_? (negate (?= (LocationKeyphrase.apply \"Coasta Vida\")))))", "plan": "(Execute (NewClobber (DefaultIntension) (extensionConstraint (^(LocationKeyphrase) AlwaysTrueConstraint)) (intension (LocationKeyphrase.apply \"The Place\"))))", "oracle_rewritten_utterance": "What events aren't at The Place?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic LocationKeyphrase) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension LocationKeyphrase)) (^(LocationKeyphrase) extensionConstraint :constraint ^(Constraint LocationKeyphrase) (^(LocationKeyphrase) AlwaysTrueConstraint)) :value ^(CalflowIntension LocationKeyphrase) (^(LocationKeyphrase) intension :extension ^LocationKeyphrase (LocationKeyphrase.apply :inner ^String \"The Place\"))))"}
{"dialogue_id": "13edf567-89ba-4fd1-8464-7a9c2e4635aa", "turn_part_id": 4, "utterance": "And one with Bob?", "last_user_utterance": "search for a team meeting but with Bill", "last_agent_utterance": "I didn't find any events matching \"team meeting\" with Bob.", "last_plan": "(FindEventWrapperWithDefaults (& (Event.attendees_? (WithAttendeeNamed \"Bill\")) (Event.subject_? (?~= \"team meeting\"))))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bob\")))))", "oracle_rewritten_utterance": "search for a team meeting but with Bob", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"Bob\")))))"}
{"dialogue_id": "6d96785f-ba9b-4191-be85-e4f8efb96c82", "turn_part_id": 1, "utterance": "And with Alice?", "last_user_utterance": "What do i have with Mom this week?", "last_agent_utterance": "I found 1 on your calendar. It's \"Test Review\" on Saturday from 8:00 to 9:30 AM.", "last_plan": "(FindEventWrapperWithDefaults (& (Event.attendees_? (WithAttendeeNamed \"Mom\")) (Event.duringDateRangeConstraint_? (ThisWeek))))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Alice\")))))", "oracle_rewritten_utterance": "What do i have with Alice this week?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"Alice\")))))"}
{"dialogue_id": "c09f0224-41fe-4960-bc44-94bd1baeb7dc", "turn_part_id": 1, "utterance": "How about with Wilma?", "last_user_utterance": "find my meetings with Betty on the 22nd", "last_agent_utterance": "I found one event with Wilma on Friday the 22nd. It's \"staff meeting\" from 10:00 to 10:30 AM.", "last_plan": "(FindEventWrapperWithDefaults (& (Event.attendees_? (WithAttendeeNamed \"Betty\")) (Event.onDate_? (NextDateOnDay 22L))))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Wilma\")))))", "oracle_rewritten_utterance": "find my meetings with Wilma on the 22nd", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"Wilma\")))))"}
{"dialogue_id": "e6ca697f-c23d-41b1-ab6a-cb5ace58aaf9", "turn_part_id": 4, "utterance": "And what about with steve?", "last_user_utterance": "What events are with stephanie", "last_agent_utterance": "I didn't find any events with steve.", "last_plan": "(FindEventWrapperWithDefaults (Event.attendees_? (WithAttendeeNamed \"stephanie\")))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"steve\")))))", "oracle_rewritten_utterance": "What events are with steve?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"steve\")))))"}
{"dialogue_id": "c99b6b21-77f4-45ff-b909-8f2b41dd58c2", "turn_part_id": 5, "utterance": "Kristen Clifford?", "last_user_utterance": "Any meeting with Jerri Skinner?", "last_agent_utterance": "I didn't find any events on your calendar.", "last_plan": "(FindEventWrapperWithDefaults (Event.attendees_? (WithAttendeeNamed \"Jerri Skinner\")))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kristen Clifford\")))))", "oracle_rewritten_utterance": "Any meeting with Kristen Clifford?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"Kristen Clifford\")))))"}
{"dialogue_id": "9788e415-6acb-4cf3-9d9e-a4292d4b274c", "turn_part_id": 1, "utterance": "What about with Beth", "last_user_utterance": "What events do I have this month with Sara?", "last_agent_utterance": "I found one event with Beth this month. It's \"Meeting with Beth and Damon Straeter\" on Wednesday the 18th from 11:00 to 11:30 AM.", "last_plan": "(FindEventWrapperWithDefaults (& (Event.attendees_? (WithAttendeeNamed \"Sara\")) (Event.duringDateRangeConstraint_? (FullMonthofMonth (Date.month (Today))))))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Beth\")))))", "oracle_rewritten_utterance": "What events do I have this month with Beth?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"Beth\")))))"}
{"dialogue_id": "327ee493-abc4-485c-a3b6-48061352326d", "turn_part_id": 1, "utterance": "Sorry I meant with Daniel.", "last_user_utterance": "What meeting to I have with Jake Fromstatefarm?", "last_agent_utterance": "I didn't find any events with Daniel.", "last_plan": "(FindEventWrapperWithDefaults (Event.attendees_? (WithAttendeeNamed \"Jake Fromstatefarm\")))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Daniel\")))))", "oracle_rewritten_utterance": "What meetings to I have with Daniel? ", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"Daniel\")))))"}
{"dialogue_id": "a4e77dc1-d0dc-47cb-9bb4-8a87eb4c564d", "turn_part_id": 1, "utterance": "And with Bob Newman?", "last_user_utterance": "What events do I have this month with Ash Ketchum?", "last_agent_utterance": "I found one event with Bob Newman in September. It's a \"Meeting with Bob Newman and Damon Straeter\".", "last_plan": "(FindEventWrapperWithDefaults (& (Event.attendees_? (WithAttendeeNamed \"Ash Ketchum\")) (Event.duringDateRangeConstraint_? (FullMonthofMonth (Date.month (Today))))))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Bob Newman\")))))", "oracle_rewritten_utterance": "What events do I have this month with Bob Newman?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"Bob Newman\")))))"}
{"dialogue_id": "029a4339-5653-4adb-b139-a348c19bf96d", "turn_part_id": 1, "utterance": "What about with Jann?", "last_user_utterance": "What do I have scheduled next week with Lindsay included?", "last_agent_utterance": "I found one event with Jann next week. It's \"touch base\" on Monday the 11th from 12:15 to 12:45 PM.", "last_plan": "(FindEventWrapperWithDefaults (& (Event.attendees_? (WithAttendeeNamed \"Lindsay\")) (Event.duringDateRangeConstraint_? (NextWeekList))))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jann\")))))", "oracle_rewritten_utterance": "What do I have scheduled next week with Jann included?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"Jann\")))))"}
{"dialogue_id": "29146b6c-7ed2-4739-a867-8b2f96f65421", "turn_part_id": 2, "utterance": "And Joan?", "last_user_utterance": "And when do I see Barbie?", "last_agent_utterance": "I found one event with Joan. It's \"Meeting with Joan and Damon Straeter\" on Monday the 16th from 12:00 to 12:30 PM.", "last_plan": "(FindEventWrapperWithDefaults (Event.attendees_? (WithAttendeeNamed \"Barbie\")))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Joan\")))))", "oracle_rewritten_utterance": "And when do I see Joan?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"Joan\")))))"}
{"dialogue_id": "b9817620-f7df-4c49-8d36-171f2d98c46a", "turn_part_id": 3, "utterance": "What about with Juliett?", "last_user_utterance": "Please find events with Charlie", "last_agent_utterance": "I found one event with Juliett. It's \"Meeting with Juliett and Damon Straeter\" on Friday the 27th from 1:00 to 1:30 PM.", "last_plan": "(FindEventWrapperWithDefaults (Event.attendees_? (WithAttendeeNamed \"Charlie\")))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Juliett\")))))", "oracle_rewritten_utterance": "Please find events with Juliett", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"Juliett\")))))"}
{"dialogue_id": "0afef91a-cf65-4093-9ae7-023a6bd625d4", "turn_part_id": 1, "utterance": "How about with Patrick?", "last_user_utterance": "Hey, what events did I have scheduled with Katie last month?", "last_agent_utterance": "I found 2 events Patrick last month.", "last_plan": "(FindEventWrapperWithDefaults (& (Event.attendees_? (WithAttendeeNamed \"Katie\")) (Event.duringDateRangeConstraint_? (FullMonthofLastMonth))))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Patrick\")))))", "oracle_rewritten_utterance": "Hey, what events did I have scheduled with Patrick last month?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"Patrick\")))))"}
{"dialogue_id": "4e057dde-cc97-4f1b-86dd-e38ed14e231c", "turn_part_id": 1, "utterance": "What about with Miriam?", "last_user_utterance": "What meetings do I have scheduled this week with Mike Scofield?", "last_agent_utterance": "I found one event with Miriam this week. It's \"Meeting with Miriam and Damon Straeter\" tomorrow from 11:00 to 11:30 AM.", "last_plan": "(FindEventWrapperWithDefaults (& (Event.attendees_? (WithAttendeeNamed \"Mike Scofield\")) (Event.duringDateRangeConstraint_? (ThisWeek))))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Miriam\")))))", "oracle_rewritten_utterance": "What meetings do I have scheduled this week with Miriam?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"Miriam\")))))"}
{"dialogue_id": "7b3e8ab7-8538-4e78-b51c-be0b2190707a", "turn_part_id": 1, "utterance": "What about Walt?", "last_user_utterance": "What do I have with Ted this week?", "last_agent_utterance": "I didn't find any events with Walt this week.", "last_plan": "(FindEventWrapperWithDefaults (& (Event.attendees_? (WithAttendeeNamed \"Ted\")) (Event.duringDateRangeConstraint_? (ThisWeek))))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Walt\")))))", "oracle_rewritten_utterance": "What do I have with Walt next week?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"Walt\")))))"}
{"dialogue_id": "58e14c37-835a-43cf-943c-f742835327a7", "turn_part_id": 1, "utterance": "How about events with Jamie instead of Steve this week?", "last_user_utterance": "What events do I have with steve this week?", "last_agent_utterance": "I found one event with Jamie this week. It's \"tacos\" tomorrow from 12:00 to 12:30 PM.", "last_plan": "(FindEventWrapperWithDefaults (& (Event.attendees_? (WithAttendeeNamed \"steve\")) (Event.duringDateRangeConstraint_? (ThisWeek))))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jamie\")))))", "oracle_rewritten_utterance": "What events do I have with Jamie this week?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"Jamie\")))))"}
{"dialogue_id": "c52a3542-323e-4a0c-84fc-b39a5702af7c", "turn_part_id": 4, "utterance": "What about with Karen?", "last_user_utterance": "What event do I have scheduled tomorrow with Jamie?", "last_agent_utterance": "I found 13 different people matching your query. Which of these did you mean?", "last_plan": "(FindEventWrapperWithDefaults (& (Event.attendees_? (WithAttendeeNamed \"Jamie\")) (Event.onDate_? (Tomorrow))))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Karen\")))))", "oracle_rewritten_utterance": "What event do I have scheduled tomorrow with Karen?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"Karen\")))))"}
{"dialogue_id": "05961221-614d-4aa7-9374-d75b9564d2df", "turn_part_id": 1, "utterance": "What about with Kaitlin Taylor?", "last_user_utterance": "What events will I be at with Andrew the rest of the month?", "last_agent_utterance": "I found one matching event on your calendar. It's \"Tennis\" on Friday the 30th from 3:00 to 3:30 PM.", "last_plan": "(FindEventWrapperWithDefaults (& (Event.attendees_? (WithAttendeeNamed \"Andrew\")) (Event.duringDateRangeConstraint_? (FullMonthofMonth (Date.month (Today))))))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kaitlin Taylor\")))))", "oracle_rewritten_utterance": "What events will I be at with Kaitlin Taylor the rest of the month?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"Kaitlin Taylor\")))))"}
{"dialogue_id": "d34f7b67-d329-4f03-8693-685fe8c33bab", "turn_part_id": 1, "utterance": "And now check for any meetings with Chris.", "last_user_utterance": "Will you check my calendar for meetings with Michael Bayer?", "last_agent_utterance": "I found one event. It's \"Meeting with chris and Damon Straeter\" from 4:00 to 4:30 PM.", "last_plan": "(FindEventWrapperWithDefaults (Event.attendees_? (WithAttendeeNamed \"Michael Bayer\")))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Chris\")))))", "oracle_rewritten_utterance": "Will you check my calendar for meetings with Chris?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"Chris\")))))"}
{"dialogue_id": "f5037cc2-e9ca-4043-be93-a474e19e7722", "turn_part_id": 2, "utterance": "What about with Harry?", "last_user_utterance": "Can you tell me what events I have with Howie this week?", "last_agent_utterance": "I didn't find any events with Harry this week.", "last_plan": "(FindEventWrapperWithDefaults (& (Event.attendees_? (WithAttendeeNamed \"Howie\")) (Event.duringDateRangeConstraint_? (ThisWeek))))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Harry\")))))", "oracle_rewritten_utterance": "Can you tell me what events I have with Harry this week?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"Harry\")))))"}
{"dialogue_id": "3a6260ee-f3fe-467a-b32e-1d66cbdeba8b", "turn_part_id": 1, "utterance": "And how about with Barry?", "last_user_utterance": "What events do I have with Jen tomorrow?", "last_agent_utterance": "I found one event. It's \"Meeting with Barry and Damon Straeter\" from 5:00 to 5:30 PM.", "last_plan": "(FindEventWrapperWithDefaults (& (Event.attendees_? (WithAttendeeNamed \"Jen\")) (Event.start_? (DateTime.date_? (?= (Tomorrow))))))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Barry\")))))", "oracle_rewritten_utterance": "What events do I have with Barry tomorrow?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"Barry\")))))"}
{"dialogue_id": "0500dd9c-9ef4-4293-a38d-ff2f55949740", "turn_part_id": 2, "utterance": "And Stacy?", "last_user_utterance": "What meetings do I have coming up with Mike?", "last_agent_utterance": "I found one event with Stacy. It's \"Meeting with Stacy and Damon Straeter\" on Thursday the 12th from 2:00 to 2:30 PM.", "last_plan": "(FindEventWrapperWithDefaults (Event.attendees_? (WithAttendeeNamed \"Mike\")))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Stacy\")))))", "oracle_rewritten_utterance": "What meetings do I have coming with Stacy?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"Stacy\")))))"}
{"dialogue_id": "184d4849-59a3-4e7b-b961-82b48c36204d", "turn_part_id": 1, "utterance": "I meant with Kim", "last_user_utterance": "What conferences do I have scheduled with Pamela next month?", "last_agent_utterance": "I didn't find any events this month.", "last_plan": "(FindEventWrapperWithDefaults (& (Event.attendees_? (WithAttendeeNamed \"Pamela\")) (& (Event.duringDateRangeConstraint_? (FullMonthofMonth (NextMonth))) (Event.subject_? (?~= \"conferences\")))))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kim\")))))", "oracle_rewritten_utterance": "What conferences do I have scheduled with Kim next month?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"Kim\")))))"}
{"dialogue_id": "d89cceeb-9758-4a8f-bb4c-3ecde3f44900", "turn_part_id": 4, "utterance": "With Sam?", "last_user_utterance": "Thanks. What events do I have with Karen this week?", "last_agent_utterance": "I found 2 events with Sam this week.", "last_plan": "(FindEventWrapperWithDefaults (& (Event.attendees_? (WithAttendeeNamed \"Karen\")) (Event.duringDateRangeConstraint_? (ThisWeek))))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Sam\")))))", "oracle_rewritten_utterance": "Thanks. What events do I have with Sam this week?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"Sam\")))))"}
{"dialogue_id": "7e8707ca-8066-49d1-a148-234deffafc69", "turn_part_id": 1, "utterance": "I meant Jesse", "last_user_utterance": "I know I have some meetings with Alexandra tomorrow. Can you tell me when and where those meetings are?", "last_agent_utterance": "I found one event with Jesse tomorrow. It's \"Eat Shower Scum\" from 9:00 to 9:30 AM.", "last_plan": "(FindEventWrapperWithDefaults (& (Event.attendees_? (WithAttendeeNamed \"Alexandra\")) (Event.onDate_? (Tomorrow))))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Jesse\")))))", "oracle_rewritten_utterance": "I know I have some meetings with Jesse tomorrow. Can you tell me when and where those meetings are?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"Jesse\")))))"}
{"dialogue_id": "6e3c8b31-ef82-42ec-a1eb-3d7e0ffa6575", "turn_part_id": 2, "utterance": "Actually I meant Adam Anderson.", "last_user_utterance": "What events do I have with Andy this weekend?", "last_agent_utterance": "I didn't find any events with Adam Anderson this weekend.", "last_plan": "(FindEventWrapperWithDefaults (& (Event.attendees_? (WithAttendeeNamed \"Andy\")) (Event.duringDateRangeConstraint_? (ThisWeekend))))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Adam Anderson\")))))", "oracle_rewritten_utterance": "What events do I have with Adam Anderson this weekend?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"Adam Anderson\")))))"}
{"dialogue_id": "c7c8392a-3ef1-4576-9675-a3bbccd4dfec", "turn_part_id": 1, "utterance": "What about with Kelly?", "last_user_utterance": "What events do i have with Steve this month?", "last_agent_utterance": "I found 1 on your calendar. It's \"Meeting with Kelly and Damon Straeter\" on Thursday from 11:00 to 11:30 AM.", "last_plan": "(FindEventWrapperWithDefaults (& (Event.attendees_? (WithAttendeeNamed \"Steve\")) (Event.duringDateRangeConstraint_? (FullMonthofMonth (Date.month (Today))))))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Kelly\")))))", "oracle_rewritten_utterance": "What events do i have with Kelly this month?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"Kelly\")))))"}
{"dialogue_id": "7ab41e1b-4c62-4dd6-aa05-ce2c7efcc209", "turn_part_id": 3, "utterance": "with emily braun?", "last_user_utterance": "any event for candy dominguez?", "last_agent_utterance": "I didn't find any events with emily braun.", "last_plan": "(FindEventWrapperWithDefaults (Event.attendees_? (WithAttendeeNamed \"candy dominguez\")))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"emily braun\")))))", "oracle_rewritten_utterance": "any event for emily braun?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"emily braun\")))))"}
{"dialogue_id": "03dfa16d-bf70-4d14-b5fa-bd47a1f241f6", "turn_part_id": 1, "utterance": "Do the same search with Joan.", "last_user_utterance": "What events do I have coming up next month with Danielle?", "last_agent_utterance": "I didn't find any events next month.", "last_plan": "(FindEventWrapperWithDefaults (& (Event.attendees_? (WithAttendeeNamed \"Danielle\")) (Event.duringDateRangeConstraint_? (FullMonthofMonth (NextMonth)))))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Joan\")))))", "oracle_rewritten_utterance": "What events do I have coming up next month with Joan?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"Joan\")))))"}
{"dialogue_id": "9ca22d04-8d14-40e4-bc60-d439745e958a", "turn_part_id": 1, "utterance": "What about with Tina Summers?", "last_user_utterance": "What events are on my calendar with Buffy Summers attending them?", "last_agent_utterance": "I found one event with Tina Summers. It's \"Meeting with Tina Summers and Damon Straeter\" on Saturday from 9:00 to 9:30 AM.", "last_plan": "(FindEventWrapperWithDefaults (Event.attendees_? (WithAttendeeNamed \"Buffy Summers\")))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Tina Summers\")))))", "oracle_rewritten_utterance": "What events are on my calendary with Tina Summers attending them?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"Tina Summers\")))))"}
{"dialogue_id": "8919cb33-06c6-4492-9a51-2c06901ea5e3", "turn_part_id": 1, "utterance": "And with Gary?", "last_user_utterance": "What am I doing with Alvin?", "last_agent_utterance": "I found one event with Gary. It's \"Meeting with Gary and Damon Straeter\" on Thursday from 11:00 to 11:30 AM.", "last_plan": "(FindEventWrapperWithDefaults (Event.attendees_? (WithAttendeeNamed \"Alvin\")))", "plan": "(Execute (NewClobber (DefaultIntension) (^(Recipient) ConstraintTypeIntension) (intension (RecipientWithNameLike (^(Recipient) EmptyStructConstraint) (PersonName.apply \"Gary\")))))", "oracle_rewritten_utterance": "What am I doing with Gary?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic (Constraint Recipient)) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension (Constraint Recipient))) (^(Recipient) ConstraintTypeIntension) :value ^(CalflowIntension (Constraint Recipient)) (^((Constraint Recipient)) intension :extension ^(Constraint Recipient) (RecipientWithNameLike :constraint ^(Constraint Recipient) (^(Recipient) EmptyStructConstraint) :name ^PersonName (PersonName.apply :name ^String \"Gary\")))))"}
{"dialogue_id": "f6153da8-b3d1-40ed-a89e-d9cdc9ffe0eb", "turn_part_id": 1, "utterance": "What about EVO?", "last_user_utterance": "What do I have that isn't at Genesis?", "last_agent_utterance": "I found 2 matching events on your calendar.", "last_plan": "(FindEventWrapperWithDefaults (Event.location_? (negate (?= (LocationKeyphrase.apply \"Genesis\")))))", "plan": "(Execute (NewClobber (DefaultIntension) (extensionConstraint (^(LocationKeyphrase) AlwaysTrueConstraint)) (intension (LocationKeyphrase.apply \"EVO\"))))", "oracle_rewritten_utterance": "What do I have that isn't at EVO?", "typed_plan": "^Dynamic (^(Dynamic) Execute :intension ^(CalflowIntension Dynamic) (^(Dynamic LocationKeyphrase) NewClobber :intension ^(CalflowIntension Dynamic) (DefaultIntension) :slotConstraint ^(Constraint (CalflowIntension LocationKeyphrase)) (^(LocationKeyphrase) extensionConstraint :constraint ^(Constraint LocationKeyphrase) (^(LocationKeyphrase) AlwaysTrueConstraint)) :value ^(CalflowIntension LocationKeyphrase) (^(LocationKeyphrase) intension :extension ^LocationKeyphrase (LocationKeyphrase.apply :inner ^String \"EVO\"))))"}
